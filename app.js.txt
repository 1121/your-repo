const express = require('express');
const { ethers } = require('ethers');
require('dotenv').config();

const app = express();
app.use(express.json());

// Connect to Ethereum mainnet
const provider = new ethers.JsonRpcProvider(
  `https://mainnet.infura.io/v3/${process.env.INFURA_PROJECT_ID}`
);

// Wallet + signer
const wallet = new ethers.Wallet(process.env.PRIVATE_KEY, provider);

// USDT ERC-20 ABI (minimal)
const usdtAbi = [
  "function transfer(address to, uint256 amount) external returns (bool)",
  "function balanceOf(address account) external view returns (uint256)",
  "function decimals() view returns (uint8)"
];

const usdtContract = new ethers.Contract(process.env.USDT_CONTRACT, usdtAbi, wallet);

// Route: POST /send-usdt
app.post('/send-usdt', async (req, res) => {
  const { to, amount } = req.body;

  if (!to || !amount) {
    return res.status(400).json({ error: 'Missing "to" or "amount"' });
  }

  try {
    const decimals = await usdtContract.decimals();
    const amountInUnits = ethers.parseUnits(amount.toString(), decimals);

    const tx = await usdtContract.transfer(to, amountInUnits);
    console.log("Transaction Hash:", tx.hash);

    await tx.wait(); // Wait for confirmation

    res.json({
      success: true,
      message: `Sent ${amount} USDT to ${to}`,
      txHash: tx.hash
    });
  } catch (error) {
    console.error(error);
    res.status(500).json({ success: false, error: error.message });
  }
});

// Route: GET /balance/:address
app.get('/balance/:address', async (req, res) => {
  const { address } = req.params;

  try {
    const decimals = await usdtContract.decimals();
    const balance = await usdtContract.balanceOf(address);
    const formattedBalance = ethers.formatUnits(balance, decimals);

    res.json({
      address,
      usdtBalance: formattedBalance
    });
  } catch (error) {
    console.error(error);
    res.status(500).json({ error: 'Failed to fetch balance' });
  }
});

// Start the server
const PORT = 3000;
app.listen(PORT, () => {
  console.log(`ðŸš€ USDT Sender App running on http://localhost:${PORT}`);
});

